This patch reverts 288559@main

288559@main changed copy semantics such that
`webkit_editor_state_is_copy_available` returns `true` even if there
is no selection.  As a result, 'Copy' appears on the browser's context
menu at all times.

See:
    https://commits.webkit.org/288559@main
    https://bugs.webkit.org/show_bug.cgi?id=285908


--- webkitgtk-2.48.0/Source/WebCore/editing/Editor.cpp.orig	2025-02-25 08:25:41.123385200 +0000
+++ webkitgtk-2.48.0/Source/WebCore/editing/Editor.cpp	2025-03-22 13:06:54.303429824 +0000
@@ -540,7 +540,7 @@
     if (imageElementFromImageDocument(document()))
         return true;
     const VisibleSelection& selection = document().selection().selection();
-    return (selection.isRange() || !isEditablePosition(selection.start())) && (!selection.isInPasswordField() || selection.isInAutoFilledAndViewableField());
+    return selection.isRange() && (!selection.isInPasswordField() || selection.isInAutoFilledAndViewableField());
 }
 
 bool Editor::canDelete() const
@@ -988,15 +988,7 @@
 
 RefPtr<Element> Editor::findEventTargetFromSelection() const
 {
-    // https://www.w3.org/TR/clipboard-apis/#fire-a-clipboard-event says:
-    // If the context is editable, then
-    // Set target to be the element that contains the start of the visible selection or cursor in document order, or the body element if there is no visible selection or cursor.
-    const VisibleSelection& selection = document().selection().selection();
-    if (selection.isRange() || isEditablePosition(selection.start()))
-        return findEventTargetFrom(selection);
-    // Else, if the context is not editable, then
-    // Set target to the focused node, or the body element if no node has focus.
-    return document().activeElement();
+    return findEventTargetFrom(document().selection().selection());
 }
 
 void Editor::applyStyle(StyleProperties* style, EditAction editingAction)
