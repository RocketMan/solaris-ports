Upstream patch to fix WebGL under X11 with no GBM

See https://bugs.webkit.org/show_bug.cgi?id=261653

--- webkitgtk-2.42.1/Source/WebCore/platform/graphics/x11/PlatformDisplayX11.cpp.~1~	2023-09-19 09:27:49.875691700 +0000
+++ webkitgtk-2.42.1/Source/WebCore/platform/graphics/x11/PlatformDisplayX11.cpp	2023-10-04 10:48:25.730103284 +0000
@@ -117,6 +117,10 @@
     if (m_eglDisplay != EGL_NO_DISPLAY) {
         m_eglDisplayOwned = false;
         PlatformDisplay::initializeEGLDisplay();
+#if ENABLE(WEBGL)
+        m_anglePlatform = EGL_PLATFORM_X11_KHR;
+        m_angleNativeDisplay = m_display;
+#endif
         return m_eglDisplay;
     }
 #endif
@@ -141,6 +145,10 @@
         m_eglDisplay = eglGetDisplay(m_display);
 
     PlatformDisplay::initializeEGLDisplay();
+#if ENABLE(WEBGL)
+    m_anglePlatform = EGL_PLATFORM_X11_KHR;
+    m_angleNativeDisplay = m_display;
+#endif
 }
 #endif // USE(EGL)
 
--- webkitgtk-2.42.0/Source/WebCore/platform/graphics/texmap/GraphicsContextGLTextureMapperANGLENicosia.cpp~	2023-09-26 10:51:52.915360944 +0000
+++ webkitgtk-2.42.0/Source/WebCore/platform/graphics/texmap/GraphicsContextGLTextureMapperANGLENicosia.cpp	2023-09-26 10:52:08.999307697 +0000
@@ -27,7 +27,7 @@
 #include "GraphicsContextGLTextureMapperANGLE.h"
 
 #if ENABLE(WEBGL) && USE(TEXTURE_MAPPER) && USE(NICOSIA)
-#include <epoxy/gl.h>
+#include <GL/gl.h>
 
 namespace WebCore {
 
--- webkitgtk-2.42.3/Source/WebKit/UIProcess/API/glib/WebKitProtocolHandler.cpp.~2~	2023-12-07 13:04:58.329154529 +0000
+++ webkitgtk-2.42.3/Source/WebKit/UIProcess/API/glib/WebKitProtocolHandler.cpp	2023-12-07 16:57:43.677997035 +0000
@@ -393,7 +393,7 @@
             if (platformDisplay)
                 addTableRow(hardwareAccelerationObject, "Platform"_s, String::fromUTF8(platformDisplay->type() == PlatformDisplay::Type::Surfaceless ? "Surfaceless"_s : "GBM"_s));
 
-            if (uiProcessContextIsEGL()) {
+            if (true || uiProcessContextIsEGL()) {
                 GLContext::ScopedGLContext glContext(GLContext::createOffscreen(platformDisplay ? *platformDisplay : PlatformDisplay::sharedDisplay()));
                 addEGLInfo(hardwareAccelerationObject);
             } else {
