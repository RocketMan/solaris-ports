Two issues worked around here.  First is that Solaris linker expects -M for
mapfiles, not the GNU ld --version-script option.  Ideally, CMakeLists.txt
or some other appropriate CMake file would be changed to detect that the
version-script option is not supported and then if not, check if SunOS, and
if so, use -M instead.

The second is a temporary workaround for the fact that the Solaris linker
doesn't currently support arbitrary globbing of symbols via '*'.  For now,
this is worked around with a manual definition of all of the symbols that
should be exported by the relevant library.  The right fix is probably to
detect whether we're using the GNU linker, and if not, use a combination of
perl, sed, etc. to generate the mapfile at build time.

Why setting LDFLAGS += -Wl,-zgnu-version-script-compat doesn't work is a
mystery that needs to be eventually figured out.

file upstream bug after resolving issues documented above

--- a/Source/WebKit/PlatformGTK.cmake	2024-09-28 19:07:32.544449620 +0000
+++ b/Source/WebKit/PlatformGTK.cmake	2024-09-28 19:08:30.207540397 +0000
@@ -45,7 +45,7 @@
 add_definitions(-DPKGLIBDIR="${LIB_INSTALL_DIR}/webkit${WEBKITGTK_API_INFIX}gtk-${WEBKITGTK_API_VERSION}")
 
 if (NOT DEVELOPER_MODE AND NOT CMAKE_SYSTEM_NAME MATCHES "Darwin")
-    WEBKIT_ADD_TARGET_PROPERTIES(WebKit LINK_FLAGS "-Wl,--version-script,${CMAKE_CURRENT_SOURCE_DIR}/webkitglib-symbols.map")
+    WEBKIT_ADD_TARGET_PROPERTIES(WebKit LINK_FLAGS "-Wl,-M,${CMAKE_CURRENT_SOURCE_DIR}/webkitglib-symbols.map")
     set_property(TARGET WebKit APPEND PROPERTY LINK_DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/webkitglib-symbols.map")
 endif ()
 
--- a/Source/WebKit/webkitglib-symbols.map	2024-10-29 12:34:12.869961735 +0000
+++ b/Source/WebKit/webkitglib-symbols.map	2024-10-29 12:34:51.961326060 +0000
@@ -1,14 +1,5 @@
 {
 global:
-  jsc_*;
-  webkit_*;
-  extern "C++" {
-    "WebKit::GPUProcessMain(int, char**)";
-    "WebKit::NetworkProcessMain(int, char**)";
-    "WebKit::WebProcessExtensionManager::initialize(WebKit::InjectedBundle*, API::Object*)";
-    "WebKit::WebProcessExtensionManager::singleton()";
-    "WebKit::WebProcessMain(int, char**)";
-  };
-local:
   *;
+local:
 };
