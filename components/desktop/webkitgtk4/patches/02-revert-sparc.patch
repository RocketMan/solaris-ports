Restore SPARC support

https://bugs.webkit.org/show_bug.cgi?id=124941

--- a/Source/WTF/wtf/PlatformCPU.h	2020-01-20 16:38:04.000000000 +0000
+++ b/Source/WTF/wtf/PlatformCPU.h	2020-01-20 17:54:31.642071523 +0000
@@ -95,6 +95,26 @@
 #define WTF_CPU_KNOWN 1
 #endif
 
+/* CPU(SPARC32) - SPARC 32-bit */
+#if defined(__sparc) && !defined(__arch64__) || defined(__sparcv8)
+#define WTF_CPU_SPARC32 1
+#define WTF_CPU_BIG_ENDIAN 1
+#define WTF_CPU_KNOWN 1
+#endif
+
+/* CPU(SPARC64) - SPARC 64-bit */
+#if defined(__sparc__) && defined(__arch64__) || defined (__sparcv9)
+#define WTF_CPU_SPARC64 1
+#define WTF_CPU_BIG_ENDIAN 1
+#define WTF_CPU_KNOWN 1
+#endif
+
+/* CPU(SPARC) - any SPARC, true for CPU(SPARC32) and CPU(SPARC64) */
+#if CPU(SPARC32) || CPU(SPARC64)
+#define WTF_CPU_SPARC 1
+#define WTF_CPU_KNOWN 1
+#endif
+
 /* CPU(X86) - i386 / x86 32-bit */
 #if   defined(__i386__) \
     || defined(i386)     \
@@ -295,7 +315,7 @@
 #define WTF_CPU_UNKNOWN 1
 #endif
 
-#if CPU(ARM) || CPU(MIPS) || CPU(RISCV64) || CPU(UNKNOWN)
+#if CPU(ARM) || CPU(MIPS) || CPU(RISCV64) || CPU(UNKNOWN) || CPU(SPARC)
 #define WTF_CPU_NEEDS_ALIGNED_ACCESS 1
 #endif
 
--- a/Source/cmake/WebKitCommon.cmake	2020-10-27 17:25:13.000000000 +0000
+++ b/Source/cmake/WebKitCommon.cmake	2020-10-27 17:53:26.536444798 +0000
@@ -112,6 +112,8 @@
         set(WTF_CPU_PPC64 1)
     elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc64le")
         set(WTF_CPU_PPC64LE 1)
+    elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "sparc*")
+        set(WTF_CPU_SPARC 1)
     elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^riscv64")
         set(WTF_CPU_RISCV64 1)
     else ()
--- a/Source/WTF/wtf/dtoa/utils.h	2020-01-20 16:38:04.000000000 +0000
+++ b/Source/WTF/wtf/dtoa/utils.h	2020-01-20 17:54:31.642071523 +0000
@@ -91,7 +91,7 @@
     defined(__AARCH64EL__) || defined(__aarch64__) || defined(__AARCH64EB__) || \
     defined(__riscv) || \
     defined(__or1k__) || defined(__arc__) || \
-    defined(__EMSCRIPTEN__)
+    defined(__EMSCRIPTEN__) || CPU(SPARC)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
 #elif defined(__mc68000__) || \
     defined(__pnacl__) || defined(__native_client__)
