Fix bmalloc's PackedAlignedPtr for X86_64 canonical addresses

See https://bugs.webkit.org/show_bug.cgi?id=214142

Suitable for upstream.


diff --git a/Source/bmalloc/bmalloc/Packed.h b/Source/bmalloc/bmalloc/Packed.h
index a51809445086..a0d1e06a9508 100644
--- a/Source/bmalloc/bmalloc/Packed.h
+++ b/Source/bmalloc/bmalloc/Packed.h
@@ -37,6 +37,8 @@
 
 namespace bmalloc {
 
+template<typename T> constexpr unsigned countOfBits = sizeof(T) * CHAR_BIT;
+
 template<typename T>
 class Packed {
 public:
@@ -139,6 +141,12 @@ public:
 #endif
         if (isAlignmentShiftProfitable)
             value <<= alignmentShiftSize;
+
+#if BCPU(X86_64) && !(BOS(DARWIN) || BOS(LINUX) || BOS(WINDOWS))
+        constexpr unsigned shiftBits = countOfBits<uintptr_t> - BOS_EFFECTIVE_ADDRESS_WIDTH;
+        value = (bitwise_cast<intptr_t>(value) << shiftBits) >> shiftBits;
+#endif
+
         return bitwise_cast<T*>(value);
     }
 
@@ -152,6 +159,7 @@ public:
 #else
         memcpy(m_storage.data(), bitwise_cast<uint8_t*>(&value) + (sizeof(void*) - storageSize), storageSize);
 #endif
+        ASSERT(get() == passedValue);
     }
 
     void clear()
